html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  margin: 0;
  padding: 0; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*** MIXIN: Flexbox ************************************************************/
/* Vertical Align Mixin */
/* Clearfix */
.clearfix {
  display: block;
  clear: both; }

/** Media Query Mixins, Breakpoints **/
@font-face {
  font-family: "Montserrat UI";
  font-weight: 200;
  src: local("Montserrat UI Light"); }

@font-face {
  font-family: "Montserrat UI";
  font-weight: 300;
  src: local("Montserrat UI Semilight"); }

@font-face {
  font-family: "Montserrat UI";
  font-weight: 400;
  src: local("Montserrat UI"); }

@font-face {
  font-family: "Montserrat UI";
  font-weight: 600;
  src: local("Montserrat UI Semibold"); }

@font-face {
  font-family: "Montserrat UI";
  font-weight: 700;
  src: local("Montserrat UI Bold"); }

@font-face {
  font-family: "Montserrat UI";
  font-style: italic;
  font-weight: 400;
  src: local("Montserrat UI Italic"); }

@font-face {
  font-family: "Montserrat UI";
  font-style: italic;
  font-weight: 700;
  src: local("Montserrat UI Bold Italic"); }

/* Globals GULP
*************************************************/
*,
*:before,
*:after {
  box-sizing: border-box; }

html,
body {
  height: 100%;
  font: 17px/1.4 'Montserrat UI', 'Montserrat', Verdana, Arial, sans-serif; }

.wrapper {
  height: 100vh; }
  .wrapper .center {
    height: 100vh;
    float: right;
    width: 85%;
    background-color: #FFFAD5; }
    .wrapper .center--main {
      text-align: center; }
      .wrapper .center--main__name {
        font-weight: 600;
        margin-top: 25%;
        font-size: 48px; }

.left-bar {
  height: 100vh;
  float: left;
  width: 15%;
  padding: 20% 0 0 0;
  background-color: #DB9E36; }
  .left-bar--links {
    width: 100%;
    text-align: center; }
    .left-bar--links__1, .left-bar--links__2, .left-bar--links__3 {
      margin: 10px 0; }
      .left-bar--links__1 a, .left-bar--links__2 a, .left-bar--links__3 a {
        text-decoration: none; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL19fcmVzZXQuc2NzcyIsInBhcnRpYWxzL19fbWl4aW5zLnNjc3MiLCJwYXJ0aWFscy9fX2ZvbnRzLW1vbnRzZXJyYXQuc2NzcyIsInBhcnRpYWxzL19fZ2xvYmFscy5zY3NzIiwicGFydGlhbHMvX19uYXYuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLEVBQUMsSUFBSSxFQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsQ0FBQyxFQUFDLFVBQVUsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLEtBQUssRUFBQyxNQUFNLEVBQUMsTUFBTSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLElBQUksRUFBQyxLQUFLLEVBQUMsTUFBTSxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLEVBQUMsVUFBVSxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsTUFBTSxFQUFDLElBQUks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Qjs7QUNoQ1AsU0FBUyxDQUFDO0VBQ1IsTUFBTSxFQUFFLEtBQU07RUFDZCxLQUFLLEVBQUUsSUFBSztFQUNaLEtBQUssRUFBRSxHQUFJO0VBQ1gsT0FBTyxFQUFFLFNBQVU7RUFDbkIsZ0JBQWdCLEVER1IsT0FBTyxHQ2FoQjtFQXJCRCxnQkFBUyxDQU9FO0lBQ1AsS0FBSyxFQUFFLElBQUs7SUFDWixVQUFVLEVBQUUsTUFBTyxHQVdwQjtJQXBCSCxtQkFBUyxFQUFULG1CQUFTLEVBQVQsbUJBQVMsQ0FhQTtNQUNILE1BQU0sRUFBRSxNQUFPLEdBS2hCO01BbkJMLG1CQUFTLENBZ0JILENBQUMsRUFoQlAsbUJBQVMsQ0FnQkgsQ0FBQyxFQWhCUCxtQkFBUyxDQWdCSCxDQUFDLENBQUM7UUFDQSxlQUFlLEVBQUUsSUFBSyxHQUN2QiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsYm9keSxkaXYsc3BhbixhcHBsZXQsb2JqZWN0LGlmcmFtZSxoMSxoMixoMyxoNCxoNSxoNixwLGJsb2NrcXVvdGUscHJlLGEsYWJicixhY3JvbnltLGFkZHJlc3MsYmlnLGNpdGUsY29kZSxkZWwsZGZuLGVtLGltZyxpbnMsa2JkLHEscyxzYW1wLHNtYWxsLHN0cmlrZSxzdHJvbmcsc3ViLHN1cCx0dCx2YXIsYix1LGksY2VudGVyLGRsLGR0LGRkLG9sLHVsLGxpLGZpZWxkc2V0LGZvcm0sbGFiZWwsbGVnZW5kLHRhYmxlLGNhcHRpb24sdGJvZHksdGZvb3QsdGhlYWQsdHIsdGgsdGQsYXJ0aWNsZSxhc2lkZSxjYW52YXMsZGV0YWlscyxlbWJlZCxmaWd1cmUsZmlnY2FwdGlvbixmb290ZXIsaGVhZGVyLGhncm91cCxtZW51LG5hdixvdXRwdXQscnVieSxzZWN0aW9uLHN1bW1hcnksdGltZSxtYXJrLGF1ZGlvLHZpZGVve2JvcmRlcjowO2ZvbnQtc2l6ZToxMDAlO2ZvbnQ6aW5oZXJpdDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZTttYXJnaW46MDtwYWRkaW5nOjB9YXJ0aWNsZSxhc2lkZSxkZXRhaWxzLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG1lbnUsbmF2LHNlY3Rpb257ZGlzcGxheTpibG9ja31ib2R5e2xpbmUtaGVpZ2h0OjF9b2wsdWx7bGlzdC1zdHlsZTpub25lfWJsb2NrcXVvdGUscXtxdW90ZXM6bm9uZX1ibG9ja3F1b3RlOmJlZm9yZSxibG9ja3F1b3RlOmFmdGVyLHE6YmVmb3JlLHE6YWZ0ZXJ7Y29udGVudDpub25lfXRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtib3JkZXItc3BhY2luZzowfSIsIi8vIE1JWElOOiBBbmltYXRpb25zXG5AbWl4aW4gdHJhbnNmb3JtKCRyb3QsICRzY2FsZTEsICRzY2FsZTIpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbn1cblxuQG1peGluIGtleWZyYW1lQW5pbWF0aW9uKCRuYW1lLCAkZHVyYXRpb24sICRjb3VudCwgJGZ1bmN0aW9uKSB7XG4gIC1tb3otYW5pbWF0aW9uOiAkbmFtZSwgJGR1cmF0aW9uLCAkY291bnQsICRmdW5jdGlvbjtcbiAgLXdlYmtpdC1hbmltYXRpb246ICRuYW1lLCAkZHVyYXRpb24sICRjb3VudCwgJGZ1bmN0aW9uO1xuICAtbXMtYW5pbWF0aW9uOiAkbmFtZSwgJGR1cmF0aW9uLCAkY291bnQsICRmdW5jdGlvbjtcbiAgLW8tYW5pbWF0aW9uOiAkbmFtZSwgJGR1cmF0aW9uLCAkY291bnQsICRmdW5jdGlvbjtcbiAgYW5pbWF0aW9uOiAkbmFtZSwgJGR1cmF0aW9uLCAkY291bnQsICRmdW5jdGlvbjtcbn1cblxuLy8gTUlYSU46IFRyYW5zaXRpb25cbkBtaXhpbiB0cmFuc2l0aW9uKCRwcm9wZXJ0eSwgJGR1cmF0aW9uLCAkdGltaW5nLWZ1bmN0aW9uLCAkZGVsYXkpIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAkcHJvcGVydHkgJGR1cmF0aW9uICR0aW1pbmctZnVuY3Rpb24gJGRlbGF5O1xuICAtbW96LXRyYW5zaXRpb246ICRwcm9wZXJ0eSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiAkZGVsYXk7XG4gIC1vLXRyYW5zaXRpb246ICRwcm9wZXJ0eSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiAkZGVsYXk7XG4gIHRyYW5zaXRpb246ICRwcm9wZXJ0eSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiAkZGVsYXk7XG59XG5cbkBtaXhpbiBzaW1wbGVUcmFuc2l0aW9uKCR0cmFuc2l0aW9uLi4uKSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gIC1tb3otdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gIC1vLXRyYW5zaXRpb246ICR0cmFuc2l0aW9uO1xuICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbn1cblxuLy8gTUlYSU46IEJvcmRlciBSYWRpdXNcbkBtaXhpbiBib3JkZXItcmFkaXVzKCRyYWRpdXMpIHtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICAgICAtbW96LWJvcmRlci1yYWRpdXM6ICRyYWRpdXM7XG4gICAgICAtbXMtYm9yZGVyLXJhZGl1czogJHJhZGl1cztcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xufVxuXG4vLyBNSVhJTjogQm94IFNoYWRvd1xuQG1peGluIGJveC1zaGFkb3coJHNoYWRvdy4uLikge1xuICAtd2Via2l0LWJveC1zaGFkb3c6ICRzaGFkb3c7XG4gICAgIC1tb3otYm94LXNoYWRvdzogJHNoYWRvdztcbiAgICAgICAgICBib3gtc2hhZG93OiAkc2hhZG93O1xufVxuXG4vLyBNSVhJTjogT3BhY2l0eVxuQG1peGluIG9wYWNpdHkoJHRyYW5zKSB7XG4gIGZpbHRlcjogYWxwaGEob3BhY3RpeT0oJHRyYW5zICogMTAwKSk7XG4gIC1tcy1maWx0ZXI6IFwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKE9wYWNpdHk9I3skdHJhbnMgKiAxMDB9KVwiO1xuICAtbW96LW9wYWNpdHk6ICR0cmFucztcbiAgLWtodG1sLW9wYWNpdHk6ICR0cmFucztcbiAgb3BhY2l0eTogJHRyYW5zO1xufVxuXG4vLyBNSVhJTjogVHJhbnNmb3JtXG5AbWl4aW4gdHJhbnNmb3JtKCRyb3QsICRzY2FsZTEsICRzY2FsZTIpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgkcm90KSBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbn1cblxuLy8gTUlYSU46IFRyYW5zZm9ybTogU2NhbGVcbkBtaXhpbiB0cmFuc2Zvcm0oJHNjYWxlMSwgJHNjYWxlMikge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoJHNjYWxlMSwgJHNjYWxlMik7XG4gICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbiAgICAgICAtby10cmFuc2Zvcm06IHNjYWxlKCRzY2FsZTEsICRzY2FsZTIpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoJHNjYWxlMSwgJHNjYWxlMik7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgkc2NhbGUxLCAkc2NhbGUyKTtcbn1cblxuXG4vLyBNSVhJTjogVHJhbnNmb3JtIFJvdGF0ZVxuQG1peGluIHJvdGF0ZSgkcm90KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoJHJvdCk7XG4gICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoJHJvdCk7XG4gICAgICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoJHJvdCk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoJHJvdCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoJHJvdCk7XG59XG5cbi8qKiogTUlYSU46IEZsZXhib3ggKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuQG1peGluIGZsZXhib3gge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbW96LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5AbWl4aW4gaW5saW5lLWZsZXgge1xuICBkaXNwbGF5OiAtd2Via2l0LWlubGluZS1ib3g7XG4gIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWZsZXg7XG4gIGRpc3BsYXk6IC1tb3otaW5saW5lLWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1pbmxpbmUtZmxleGJveDtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG59XG5cbkBtaXhpbiBmbGV4KCR2YWx1ZXMpIHtcbiAgLXdlYmtpdC1ib3gtZmxleDogJHZhbHVlcztcbiAgLW1vei1ib3gtZmxleDogICR2YWx1ZXM7XG4gIC13ZWJraXQtZmxleDogICR2YWx1ZXM7XG4gIC1tcy1mbGV4OiAgJHZhbHVlcztcbiAgZmxleDogICR2YWx1ZXM7XG59XG5cbkBtaXhpbiBmbGV4LWRpcmVjdGlvbigkdmFsdWU6IHJvdykgeyAvKiAhcm93ISB8IHJvdy1yZXZlcnNlIHwgY29sdW1uIHwgY29sdW1uLXJldmVyc2UgKi9cbiAgQGlmICR2YWx1ZSA9PSByb3ctcmV2ZXJzZSB7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiByZXZlcnNlO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgfSBAZWxzZSBpZiAkdmFsdWUgPT0gY29sdW1uIHtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICB9IEBlbHNlIGlmICR2YWx1ZSA9PSBjb2x1bW4tcmV2ZXJzZSB7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiByZXZlcnNlO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIH0gQGVsc2Uge1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgfVxuICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOiAkdmFsdWU7XG4gIC1tb3otZmxleC1kaXJlY3Rpb246ICR2YWx1ZTtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiAkdmFsdWU7XG4gIGZsZXgtZGlyZWN0aW9uOiAkdmFsdWU7XG59XG5cbkBtaXhpbiBmbGV4LXdyYXAoJHZhbHVlOiBub3dyYXApIHsgLyogIW5vd3JhcCEgfCB3cmFwIHwgd3JhcC1yZXZlcnNlICovXG4gIC8vIE5vIFdlYmtpdCBCb3ggZmFsbGJhY2suXG4gIC13ZWJraXQtZmxleC13cmFwOiAkdmFsdWU7XG4gIC1tb3otZmxleC13cmFwOiAkdmFsdWU7XG4gIEBpZiAkdmFsdWUgPT0gbm93cmFwIHtcbiAgICAtbXMtZmxleC13cmFwOiBub25lO1xuICB9IEBlbHNlIHsgXG4gICAgLW1zLWZsZXgtd3JhcDogJHZhbHVlOyBcbiAgfVxuICBmbGV4LXdyYXA6ICR2YWx1ZTtcbn1cblxuQG1peGluIGZsZXgtZmxvdygkdmFsdWVzOiAocm93IG5vd3JhcCkpIHsgLyogQ29tYmluYXRpb24gb2YgZmxleC1kaXJlY3Rpb24gQU5EIGZsZXgtd3JhcCwgZGVmYXVsdCBpcyByb3cgQU5EIG5vd3JhcCAqL1xuICAvLyBObyBXZWJraXQgQm94IGZhbGxiYWNrLlxuICAtd2Via2l0LWZsZXgtZmxvdzogJHZhbHVlcztcbiAgLW1vei1mbGV4LWZsb3c6ICR2YWx1ZXM7XG4gIC1tcy1mbGV4LWZsb3c6ICR2YWx1ZXM7XG4gIGZsZXgtZmxvdzogJHZhbHVlcztcbn1cblxuQG1peGluIGZsZXgtZ3JvdygkaW50OiAwKSB7XG4gIC13ZWJraXQtYm94LWZsZXg6ICRpbnQ7XG4gIC13ZWJraXQtZmxleC1ncm93OiAkaW50O1xuICAtbW96LWZsZXgtZ3JvdzogJGludDtcbiAgLW1zLWZsZXgtcG9zaXRpdmU6ICRpbnQ7XG4gIGZsZXgtZ3JvdzogJGludDtcbn1cblxuQG1peGluIGZsZXgtc2hyaW5rKCRpbnQ6IDEpIHtcbiAgLXdlYmtpdC1mbGV4LXNocmluazogJGludDtcbiAgLW1vei1mbGV4LXNocmluazogJGludDtcbiAgLW1zLWZsZXgtbmVnYXRpdmU6ICRpbnQ7XG4gIGZsZXgtc2hyaW5rOiAkaW50O1xufVxuXG5AbWl4aW4gZmxleC1iYXNpcygkdmFsdWU6IGF1dG8pIHtcbiAgLXdlYmtpdC1mbGV4LWJhc2lzOiAkdmFsdWU7XG4gIC1tb3otZmxleC1iYXNpczogJHZhbHVlO1xuICAtbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTogJHZhbHVlO1xuICBmbGV4LWJhc2lzOiAkdmFsdWU7XG59XG5cbkBtaXhpbiBqdXN0aWZ5LWNvbnRlbnQoJHZhbHVlOiBmbGV4LXN0YXJ0KSB7IC8qICFmbGV4LXN0YXJ0ISwgZmxleC1lbmQsIGNlbnRlciwgc3BhY2UtYmV0d2Vlbiwgc3BhY2UtYXJvdW5kICovXG4gIEBpZiAkdmFsdWUgPT0gZmxleC1zdGFydCB7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gIH0gQGVsc2UgaWYgJHZhbHVlID09IGZsZXgtZW5kIHtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICB9IEBlbHNlIGlmICR2YWx1ZSA9PSBzcGFjZS1iZXR3ZWVuIHtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIH0gQGVsc2Uge1xuICAgIC13ZWJraXQtYm94LXBhY2s6ICR2YWx1ZTtcbiAgICAtbXMtZmxleC1wYWNrOiAkdmFsdWU7XG4gIH1cbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ICR2YWx1ZTtcbiAgLW1vei1qdXN0aWZ5LWNvbnRlbnQ6ICR2YWx1ZTtcbiAganVzdGlmeS1jb250ZW50OiAkdmFsdWU7XG59XG5cbkBtaXhpbiBhbGlnbi1pdGVtcygkdmFsdWU6IHN0cmV0Y2gpIHsgIC8qIGZsZXgtc3RhcnQsIGZsZXgtZW5kLCBjZW50ZXIsIGJhc2VsaW5lLCAhc3RyZXRjaCEgKi9cbiAgQGlmICR2YWx1ZSA9PSBmbGV4LXN0YXJ0IHtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogc3RhcnQ7XG4gICAgLW1zLWZsZXgtYWxpZ246IHN0YXJ0O1xuICB9IEBlbHNlIGlmICR2YWx1ZSA9PSBmbGV4LWVuZCB7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGVuZDtcbiAgICAtbXMtZmxleC1hbGlnbjogZW5kO1xuICB9IEBlbHNlIHtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogJHZhbHVlO1xuICAgIC1tcy1mbGV4LWFsaWduOiAkdmFsdWU7XG4gIH1cbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogJHZhbHVlO1xuICAtbW96LWFsaWduLWl0ZW1zOiAkdmFsdWU7XG4gIGFsaWduLWl0ZW1zOiAkdmFsdWU7XG59XG5cbkBtaXhpbiBhbGlnbi1zZWxmKCR2YWx1ZTogYXV0bykgeyAvKiAhYXV0byEgfCBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBiYXNlbGluZSB8IHN0cmV0Y2ggKi9cbiAgLy8gTm8gV2Via2l0IEJveCBGYWxsYmFjay5cbiAgLXdlYmtpdC1hbGlnbi1zZWxmOiAkdmFsdWU7XG4gIC1tb3otYWxpZ24tc2VsZjogJHZhbHVlO1xuICBAaWYgJHZhbHVlID09IGZsZXgtc3RhcnQge1xuICAgIC1tcy1mbGV4LWl0ZW0tYWxpZ246IHN0YXJ0O1xuICB9IEBlbHNlIGlmICR2YWx1ZSA9PSBmbGV4LWVuZCB7XG4gICAgLW1zLWZsZXgtaXRlbS1hbGlnbjogZW5kO1xuICB9IEBlbHNlIHtcbiAgICAtbXMtZmxleC1pdGVtLWFsaWduOiAkdmFsdWU7XG4gIH1cbiAgYWxpZ24tc2VsZjogJHZhbHVlO1xufVxuXG5AbWl4aW4gYWxpZ24tY29udGVudCgkdmFsdWU6IHN0cmV0Y2gpIHsgLyogZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgc3BhY2UtYmV0d2VlbiB8IHNwYWNlLWFyb3VuZCB8ICFzdHJldGNoISAqL1xuICAvLyBObyBXZWJraXQgQm94IEZhbGxiYWNrLlxuICAtd2Via2l0LWFsaWduLWNvbnRlbnQ6ICR2YWx1ZTtcbiAgLW1vei1hbGlnbi1jb250ZW50OiAkdmFsdWU7XG4gIEBpZiAkdmFsdWUgPT0gZmxleC1zdGFydCB7XG4gICAgLW1zLWZsZXgtbGluZS1wYWNrOiBzdGFydDtcbiAgfSBAZWxzZSBpZiAkdmFsdWUgPT0gZmxleC1lbmQge1xuICAgIC1tcy1mbGV4LWxpbmUtcGFjazogZW5kO1xuICB9IEBlbHNlIHtcbiAgICAtbXMtZmxleC1saW5lLXBhY2s6ICR2YWx1ZTtcbiAgfVxuICBhbGlnbi1jb250ZW50OiAkdmFsdWU7XG59XG5cblxuLyogVmVydGljYWwgQWxpZ24gTWl4aW4gKi9cbkBtaXhpbiB2ZXJ0aWNhbC1hbGlnbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cblxuLyogQ2xlYXJmaXggKi9cbi5jbGVhcmZpeCB7XG4gIGRpc3BsYXk6YmxvY2s7XG4gIGNsZWFyOmJvdGg7XG59XG5cblxuLyoqIE1lZGlhIFF1ZXJ5IE1peGlucywgQnJlYWtwb2ludHMgKiovXG5AbWl4aW4gcmVzcG9uZC10bygkbmFtZSkge1xuICBAaWYgJG5hbWUgPT0gXCJtb2JpbGVcIiB7XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkbmFtZSA9PSBcInRhYmxldFwiIHtcbiAgICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkbmFtZSA9PSBcImRlc2t0b3BcIiB7XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuIiwiJG1vbnRzZXJyYXQ6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdCBVSVwiO1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIHNyYzogbG9jYWwoXCJNb250c2VycmF0IFVJIExpZ2h0XCIpO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdCBVSVwiO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIHNyYzogbG9jYWwoXCJNb250c2VycmF0IFVJIFNlbWlsaWdodFwiKTtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXQgVUlcIjtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBzcmM6IGxvY2FsKFwiTW9udHNlcnJhdCBVSVwiKTtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXQgVUlcIjtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBzcmM6IGxvY2FsKFwiTW9udHNlcnJhdCBVSSBTZW1pYm9sZFwiKTtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXQgVUlcIjtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBzcmM6IGxvY2FsKFwiTW9udHNlcnJhdCBVSSBCb2xkXCIpO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdCBVSVwiO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHNyYzogbG9jYWwoXCJNb250c2VycmF0IFVJIEl0YWxpY1wiKTtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXQgVUlcIjtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBzcmM6IGxvY2FsKFwiTW9udHNlcnJhdCBVSSBCb2xkIEl0YWxpY1wiKTtcclxufVxyXG5cclxuIiwiLyogR2xvYmFscyBHVUxQXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4kbWFpbjogI0ZGRkFENTtcbiRzaWRlYmFyOiAjREI5RTM2O1xuXG5odG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udDogMTdweC8xLjQgJ01vbnRzZXJyYXQgVUknLCAnTW9udHNlcnJhdCcsIFZlcmRhbmEsIEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuXG4ud3JhcHBlciB7ICAvLyBXcmFwcGVyIGFyb3VuZCBhbGwgYmxvY2sgY29udGVudFxuICBoZWlnaHQ6IDEwMHZoO1xuXG4gIC5jZW50ZXIge1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHdpZHRoOiA4NSU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW47XG5cbiAgICAmLS1tYWluIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICAgJl9fbmFtZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIG1hcmdpbi10b3A6IDI1JTtcbiAgICAgICAgZm9udC1zaXplOiA0OHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4iLCIubGVmdC1iYXIge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDE1JTtcbiAgcGFkZGluZzogMjAlIDAgMCAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2lkZWJhcjtcblxuICAmLS1saW5rcyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgJl9fMSxcbiAgICAmX18yLFxuICAgICZfXzMge1xuICAgICAgbWFyZ2luOiAxMHB4IDA7XG5cbiAgICAgIGEge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
